/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.crud.Veterinario;

import Modelo.conexion;
import javax.swing.JOptionPane;
import Vista.menu.Menu;
import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import javax.swing.JPanel;


/**
 *
 * @author user
 */
public class Veterinario extends javax.swing.JPanel {

    /**
     * Creates new form Veterinario
     */
    public Veterinario() {

        initComponents();

        // Mostrar el JOptionPane con la pregunta
        int opcion = JOptionPane.showOptionDialog(
                null,
                "¿Su Veterinario está registrado en el sistema?",
                "Consulta de Mascota",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new Object[]{"Sí", "No"},
                "Sí");

// Manejar las respuestas
        if (opcion == JOptionPane.YES_OPTION) {
            // Configuración para búsqueda           
            lblVeterinarios.setVisible(true);
            txtBuscarVeterinario.setVisible(true);
            btnBuscar.setVisible(true);
            btnGuardar.setVisible(false);
            lblNombre.setVisible(false);
            txtNombreVeterinario.setVisible(false);
            lblCedula.setVisible(false);
            txtCedulaVeterinario.setVisible(false);
            lblDireccion.setVisible(false);
            txtDireccionVeterinario.setVisible(false);
            lblCelular.setVisible(false);
            txtCelularVeterinario.setVisible(false);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            btnRegresar.setVisible(false);
            tblVeterinarioBusqueda.setVisible(true);
            // Crear conexión y eliminar el veterinario
            conexion Base = new conexion();
            VeterinarioDb vetDb = new VeterinarioDb(Base);
            vetDb.cargarDatosEnTabla(tblVeterinarioBusqueda);
            

        } else if (opcion == JOptionPane.NO_OPTION) {
            // Configuración para agregar nueva mascota
            lblVeterinarios.setVisible(false);
            txtBuscarVeterinario.setVisible(false);
            btnBuscar.setVisible(false);
            btnGuardar.setVisible(true);
            lblNombre.setVisible(true);
            txtNombreVeterinario.setVisible(true);
            lblCedula.setVisible(true);
            txtCedulaVeterinario.setVisible(true);
            lblDireccion.setVisible(true);
            txtDireccionVeterinario.setVisible(true);
            lblCelular.setVisible(true);
            txtCelularVeterinario.setVisible(true);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            btnRegresar.setVisible(false);
            tblVeterinarioBusqueda.setVisible(false);
            
            
            // Crear conexión y eliminar el veterinario
            conexion Base = new conexion();
            VeterinarioDb vetDb = new VeterinarioDb(Base);
            
            

        } else {
            // Mostrar mensaje en caso de no seleccionar una opción
            JOptionPane.showMessageDialog(null, "No seleccionaste ninguna opción.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogo = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pnlPrincipal = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        lblTituloVeterinario = new javax.swing.JLabel();
        pnlCRUDS = new javax.swing.JPanel();
        pnlBotones = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        lblVeterinarios = new javax.swing.JLabel();
        txtBuscarVeterinario = new javax.swing.JTextField();
        pnlCampos = new javax.swing.JPanel();
        txtDireccionVeterinario = new javax.swing.JTextField();
        txtCelularVeterinario = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblCedula = new javax.swing.JLabel();
        lblCelular = new javax.swing.JLabel();
        txtNombreVeterinario = new javax.swing.JTextField();
        txtCedulaVeterinario = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        ScrollVete = new javax.swing.JScrollPane();
        tblVeterinarioBusqueda = new javax.swing.JTable();

        pnlLogo.setBackground(new java.awt.Color(255, 255, 255));
        pnlLogo.setForeground(new java.awt.Color(204, 204, 204));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LOGOPL.png"))); // NOI18N

        javax.swing.GroupLayout pnlLogoLayout = new javax.swing.GroupLayout(pnlLogo);
        pnlLogo.setLayout(pnlLogoLayout);
        pnlLogoLayout.setHorizontalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogoLayout.createSequentialGroup()
                .addContainerGap(246, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
        );
        pnlLogoLayout.setVerticalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setMaximumSize(new java.awt.Dimension(700, 480));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 480));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 582));

        pnlPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        pnlPrincipal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(78, 108, 152)));
        pnlPrincipal.setPreferredSize(new java.awt.Dimension(700, 480));

        btnSalir.setBackground(new java.awt.Color(183, 224, 210));
        btnSalir.setForeground(new java.awt.Color(78, 108, 152));
        btnSalir.setText("Salir");
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        lblTituloVeterinario.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        lblTituloVeterinario.setForeground(new java.awt.Color(78, 108, 152));
        lblTituloVeterinario.setText("VETERINARIO");

        pnlCRUDS.setBackground(new java.awt.Color(255, 255, 255));
        pnlCRUDS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(78, 108, 152)));

        pnlBotones.setBackground(new java.awt.Color(255, 255, 255));
        pnlBotones.setForeground(new java.awt.Color(183, 224, 210));

        btnGuardar.setBackground(new java.awt.Color(183, 224, 210));
        btnGuardar.setForeground(new java.awt.Color(78, 108, 152));
        btnGuardar.setText("Guardar Nuevo");
        btnGuardar.setToolTipText("LLENAR TODOS LOS CAMPOS");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(183, 224, 210));
        btnModificar.setForeground(new java.awt.Color(78, 108, 152));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(183, 224, 210));
        btnEliminar.setForeground(new java.awt.Color(78, 108, 152));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRegresar.setBackground(new java.awt.Color(183, 224, 210));
        btnRegresar.setForeground(new java.awt.Color(78, 108, 152));
        btnRegresar.setText("Regresar");
        btnRegresar.setToolTipText("NO CAMBIAR");
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        lblVeterinarios.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblVeterinarios.setForeground(new java.awt.Color(78, 108, 152));
        lblVeterinarios.setText("Veterinarios:");

        txtBuscarVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtBuscarVeterinario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarVeterinarioKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegresar))
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(lblVeterinarios)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscarVeterinario, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnRegresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVeterinarios, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarVeterinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlCampos.setBackground(new java.awt.Color(255, 255, 255));
        pnlCampos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDireccionVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pnlCampos.add(txtDireccionVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 256, -1));

        txtCelularVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCelularVeterinario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCelularVeterinarioMouseClicked(evt);
            }
        });
        txtCelularVeterinario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCelularVeterinarioKeyTyped(evt);
            }
        });
        pnlCampos.add(txtCelularVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 256, -1));

        lblDireccion.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(78, 108, 152));
        lblDireccion.setText("Direccion:");
        pnlCampos.add(lblDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        lblNombre.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(78, 108, 152));
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombre:");
        pnlCampos.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 93, -1));

        lblCedula.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCedula.setForeground(new java.awt.Color(78, 108, 152));
        lblCedula.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCedula.setText("Cedula:");
        pnlCampos.add(lblCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 120, -1));

        lblCelular.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCelular.setForeground(new java.awt.Color(78, 108, 152));
        lblCelular.setText("Celular:");
        pnlCampos.add(lblCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        txtNombreVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNombreVeterinario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreVeterinarioKeyTyped(evt);
            }
        });
        pnlCampos.add(txtNombreVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 256, -1));

        txtCedulaVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCedulaVeterinario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaVeterinarioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaVeterinarioKeyTyped(evt);
            }
        });
        pnlCampos.add(txtCedulaVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 256, -1));

        btnBuscar.setBackground(new java.awt.Color(183, 224, 210));
        btnBuscar.setForeground(new java.awt.Color(78, 108, 152));
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("ID Necesario");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnBuscarKeyReleased(evt);
            }
        });
        pnlCampos.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, -1));

        tblVeterinarioBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ScrollVete.setViewportView(tblVeterinarioBusqueda);

        javax.swing.GroupLayout pnlCRUDSLayout = new javax.swing.GroupLayout(pnlCRUDS);
        pnlCRUDS.setLayout(pnlCRUDSLayout);
        pnlCRUDSLayout.setHorizontalGroup(
            pnlCRUDSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCRUDSLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(pnlCRUDSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollVete, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCRUDSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlCRUDSLayout.createSequentialGroup()
                            .addComponent(pnlCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(48, 48, 48))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        pnlCRUDSLayout.setVerticalGroup(
            pnlCRUDSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCRUDSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollVete, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(lblTituloVeterinario, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(pnlCRUDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTituloVeterinario)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCRUDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtCedulaVeterinario
                .getText().isBlank() || txtNombreVeterinario.getText().isBlank() || txtDireccionVeterinario.getText().isBlank() || txtCelularVeterinario.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "No dejar espacios en blanco");
        } else {
            if (VeterinarioDb.validarCedula(txtCedulaVeterinario.getText().trim())) {

                if (VeterinarioDb.verificarTelefono(txtCelularVeterinario.getText().trim())) {

                    conexion Base = new conexion();
                    VeterinarioDb miVete = new VeterinarioDb(Base);
                    miVete.agregarVeterinario(txtCedulaVeterinario
                            .getText(), txtNombreVeterinario.getText(), txtDireccionVeterinario.getText(), txtCelularVeterinario.getText());

                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese un celular correcto");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Ingrese una cedula valida");
            }
        }
        limpiarCamposVeterinario();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
 // Ocultar elementos de la interfaz
    lblVeterinarios.setVisible(false);
    txtBuscarVeterinario.setVisible(false);
    btnBuscar.setVisible(false);
    btnGuardar.setVisible(false);
    
    // Hacer visibles los campos para mostrar la información del veterinario
    lblNombre.setVisible(true);
    txtNombreVeterinario.setVisible(true);
    lblCedula.setVisible(true);
    txtCedulaVeterinario.setVisible(true);
    txtCedulaVeterinario.setEditable(false);
    lblDireccion.setVisible(true);
    txtDireccionVeterinario.setVisible(true);
    lblCelular.setVisible(true);
    txtCelularVeterinario.setVisible(true);
    btnModificar.setVisible(true);
    btnEliminar.setVisible(true);
    btnRegresar.setVisible(true);
    tblVeterinarioBusqueda.setVisible(false);
    
    // Obtener la cédula del veterinario desde el campo de búsqueda
    String cedulaVeterinario = txtBuscarVeterinario.getText().trim();
    
    // Validar la cédula
    if (!VeterinarioDb.validarCedula(cedulaVeterinario)) {
        JOptionPane.showMessageDialog(null, "La cédula ingresada no es válida. Por favor, verifique e intente nuevamente.");
        return; // Salir del método si la cédula no es válida
    }
    conexion Base = new conexion();
            VeterinarioDb vetDb = new VeterinarioDb(Base);
    // Llamar al método para obtener los datos del veterinario
    vetDb.obtenerVeterinarioPorCedula(cedulaVeterinario, txtCedulaVeterinario, txtNombreVeterinario, txtDireccionVeterinario, txtCelularVeterinario);

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // Obtener los valores actuales de los campos
    String cedula = txtCedulaVeterinario.getText(); // Asegúrate de que este campo contenga la cédula del veterinario
    String nombre = txtNombreVeterinario.getText();
    String direccion = txtDireccionVeterinario.getText();
    String celular = txtCelularVeterinario.getText();

    // Validar que los campos no estén vacíos
    if (cedula.isEmpty() || nombre.isEmpty() || direccion.isEmpty() || celular.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos.");
        return;
    }

    // Instanciar VeterinarioDb y actualizar los datos
    VeterinarioDb veteDb = new VeterinarioDb(new conexion());
    veteDb.modificarVeterinario(cedula, nombre, direccion, celular);

    // Opcional: Deshabilitar campos nuevamente después de modificar
    txtCedulaVeterinario.setEditable(false);
    limpiarCamposVeterinario(); // Asegúrate de que este método limpie los campos correctamente

    // Actualizar la interfaz
    lblVeterinarios.setVisible(true);
    txtBuscarVeterinario.setVisible(true);
    btnBuscar.setVisible(true);
    btnGuardar.setVisible(false);
    lblNombre.setVisible(false);
    txtNombreVeterinario.setVisible(false);
    lblCedula.setVisible(false);
    txtCedulaVeterinario.setVisible(false); // Asegúrate de que este campo esté oculto si es necesario
    lblDireccion.setVisible(false);
    txtDireccionVeterinario.setVisible(false);
    lblCelular.setVisible(false);
    txtCelularVeterinario.setVisible(false);
    btnModificar.setVisible(false);
    btnEliminar.setVisible(false);
    btnRegresar.setVisible(false);
    tblVeterinarioBusqueda.setVisible(false);
    
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
         // Confirmar la eliminación
    int confirmacion = JOptionPane.showConfirmDialog(
            null,
            "¿Estás seguro de que deseas eliminar este veterinario?",
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
    );

    if (confirmacion == JOptionPane.YES_OPTION) {
        String cedulaVeterinario = txtBuscarVeterinario.getText();

        // Crear conexión y eliminar el veterinario
        conexion Base = new conexion();
        VeterinarioDb vetDb = new VeterinarioDb(Base);

        boolean resultado = vetDb.eliminarVeterinarioPorCedula(cedulaVeterinario);


            if (resultado) {
                JOptionPane.showMessageDialog(null, "El veterinario ha sido eliminado exitosamente.");
                // Limpiar los campos o actualizar la vista según sea necesario
                limpiarCamposVeterinario();

                // Actualizar la interfaz
                
                lblVeterinarios.setVisible(true);
                txtBuscarVeterinario.setVisible(true);
                btnBuscar.setVisible(true);
                btnGuardar.setVisible(false);
                lblNombre.setVisible(false);
                txtNombreVeterinario.setVisible(false);
                lblCedula.setVisible(false);
                txtCedulaVeterinario.setVisible(false);
                lblDireccion.setVisible(false);
                txtDireccionVeterinario.setVisible(false);
                lblCelular.setVisible(false);
                txtCelularVeterinario.setVisible(false);
                btnModificar.setVisible(false);
                btnEliminar.setVisible(false);
                btnRegresar.setVisible(false);
                tblVeterinarioBusqueda.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar el veterinario. Verifica el registro.");
            }
        }
    

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        pnlPrincipal.setVisible(false);
        Mostrarpanelcrud(pnlLogo);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        lblVeterinarios.setVisible(true);
        txtBuscarVeterinario.setVisible(true);
        btnBuscar.setVisible(true);
        btnGuardar.setVisible(false);
        lblNombre.setVisible(false);
        txtNombreVeterinario.setVisible(false);
        lblCedula.setVisible(false);
        txtBuscarVeterinario.setVisible(false);
        lblDireccion.setVisible(false);
        txtDireccionVeterinario.setVisible(false);
        lblCelular.setVisible(false);
        txtCelularVeterinario.setVisible(false);
        btnModificar.setVisible(false);
        btnEliminar.setVisible(false);
        btnRegresar.setVisible(false);
        tblVeterinarioBusqueda.setVisible(true);

    }//GEN-LAST:event_btnRegresarActionPerformed

    private void txtCedulaVeterinarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaVeterinarioKeyReleased

    }//GEN-LAST:event_txtCedulaVeterinarioKeyReleased

    private void txtBuscarVeterinarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarVeterinarioKeyReleased
        char c = evt.getKeyChar();
// Verificar si el carácter ingresado no es un número o si es Backspace
        if (!Character.isDigit(c) && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            evt.consume(); // Ignorar el evento si no es un número
        } else {
            // Obtener el texto actual del JTextField
            String cedula = txtBuscarVeterinario.getText().trim();

            // Verificar si la longitud es 10
            if (cedula.length() > 10) {
                evt.consume();
            } else {
                // Actualizar la lista de duenos
                conexion Base = new conexion();
                VeterinarioDb dueDb = new VeterinarioDb(Base);
                dueDb.filtrarVeterinariosPorCedula(tblVeterinarioBusqueda, cedula);
            }
        }
    }//GEN-LAST:event_txtBuscarVeterinarioKeyReleased

    private void txtCelularVeterinarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCelularVeterinarioMouseClicked
        
    }//GEN-LAST:event_txtCelularVeterinarioMouseClicked

    private void txtCelularVeterinarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelularVeterinarioKeyTyped
        char caracter = evt.getKeyChar();
    
    // Verificar si el carácter es un número
    if (Character.isDigit(caracter)) {
        // Si el campo está vacío y se intenta ingresar un número, agregar "09"
        if (txtCelularVeterinario.getText().isEmpty()) {
            txtCelularVeterinario.setText("09");
        }

        // Verificar la longitud del texto después de agregar el nuevo carácter
        String textoActual = txtCelularVeterinario.getText();
        
        // Si el texto actual tiene 10 dígitos, no permitir más entradas
        if (textoActual.length() >= 10) {
            evt.consume(); // Cancelar el evento de tecla
        }
    } else {
        // Si el carácter no es un número (es una letra u otro carácter), cancelar el evento
        evt.consume();
    }
    }//GEN-LAST:event_txtCelularVeterinarioKeyTyped

    private void txtNombreVeterinarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreVeterinarioKeyTyped
        char caracter = evt.getKeyChar();

        // Verificar si el carácter es un número
        if (Character.isDigit(caracter)) {
            // Mostrar un JDialog
            JOptionPane.showMessageDialog(this, "No se pueden ingresar números", "Error", JOptionPane.ERROR_MESSAGE);
            // Cancelar el evento de tecla
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreVeterinarioKeyTyped

    private void txtCedulaVeterinarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaVeterinarioKeyTyped
        char caracter = evt.getKeyChar();
    
    // Verificar si el carácter es un número
    if (Character.isDigit(caracter)) {
        // Obtener el texto actual del campo
        String textoActual = txtCedulaVeterinario.getText(); // Cambiado a txtCedula
        
        // Si el texto actual tiene 10 dígitos, no permitir más entradas
        if (textoActual.length() >= 10) {
            evt.consume(); // Cancelar el evento de tecla
        }
    } else {
        // Si el carácter no es un número (es una letra u otro carácter), cancelar el evento
        evt.consume();
    }
    }//GEN-LAST:event_txtCedulaVeterinarioKeyTyped

    private void btnBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarKeyReleased
    private void limpiarCamposVeterinario() {
        txtBuscarVeterinario.setText("");
        txtNombreVeterinario.setText("");
        txtDireccionVeterinario.setText("");
        txtCelularVeterinario.setText("");
        // Si tienes más campos, agrégales limpieza aquí
    }

    private void Mostrarpanelcrud(JPanel p) {
        p.setSize(700, 460);
        p.setLocation(0, 0);
        Menu.PanelPrincipal.removeAll();
        Menu.PanelPrincipal.add(p, BorderLayout.CENTER);
        Menu.PanelPrincipal.revalidate();
        Menu.PanelPrincipal.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollVete;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTituloVeterinario;
    private javax.swing.JLabel lblVeterinarios;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlCRUDS;
    private javax.swing.JPanel pnlCampos;
    public static javax.swing.JPanel pnlLogo;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JTable tblVeterinarioBusqueda;
    private javax.swing.JTextField txtBuscarVeterinario;
    private javax.swing.JTextField txtCedulaVeterinario;
    private javax.swing.JTextField txtCelularVeterinario;
    private javax.swing.JTextField txtDireccionVeterinario;
    private javax.swing.JTextField txtNombreVeterinario;
    // End of variables declaration//GEN-END:variables
}
