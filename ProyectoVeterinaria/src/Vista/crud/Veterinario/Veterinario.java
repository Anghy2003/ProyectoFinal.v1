/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.crud.Veterinario;

import Modelo.conexion;
import javax.swing.JOptionPane;
import Vista.menu.Menu;
import java.awt.BorderLayout;
import javax.swing.JPanel;


/**
 *
 * @author user
 */
public class Veterinario extends javax.swing.JPanel {

    /**
     * Creates new form Veterinario
     */
    public Veterinario() {

        initComponents();

        // Mostrar el JOptionPane con la pregunta
        int opcion = JOptionPane.showOptionDialog(
                null,
                "¿Su Veterinario está registrado en el sistema?",
                "Consulta de Mascota",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new Object[]{"Sí", "No"},
                "Sí");

// Manejar las respuestas
        if (opcion == JOptionPane.YES_OPTION) {
            // Configuración para búsqueda
            lblVeterinarios.setVisible(true);
            cmbVeterinarios.setVisible(true);
            btnBuscar.setVisible(true);
            btnGuardar.setVisible(false);
            lblNombre.setVisible(false);
            txtNombreVeterinario.setVisible(false);
            lblCedula.setVisible(false);
            txtCedulaVeterinario.setVisible(false);
            lblDireccion.setVisible(false);
            txtDireccionVeterinario.setVisible(false);
            lblCelular.setVisible(false);
            txtCelularVeterinario.setVisible(false);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            btnRegresar.setVisible(false);

            // Llenar los ComboBox con datos
            conexion Base = new conexion();
            VeterinarioDb masDb = new VeterinarioDb(Base);
            masDb.llenarComboBoxVeterinarios(cmbVeterinarios);

        } else if (opcion == JOptionPane.NO_OPTION) {
            // Configuración para agregar nueva mascota
            lblVeterinarios.setVisible(false);
            cmbVeterinarios.setVisible(false);
            btnBuscar.setVisible(false);
            btnGuardar.setVisible(true);
            lblNombre.setVisible(true);
            txtNombreVeterinario.setVisible(true);
            lblCedula.setVisible(true);
            txtCedulaVeterinario.setVisible(true);
            lblDireccion.setVisible(true);
            txtDireccionVeterinario.setVisible(true);
            lblCelular.setVisible(true);
            txtCelularVeterinario.setVisible(true);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            btnRegresar.setVisible(false);

        } else {
            // Mostrar mensaje en caso de no seleccionar una opción
            JOptionPane.showMessageDialog(null, "No seleccionaste ninguna opción.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogo = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pnlPrincipal = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        lblMASCOTAS = new javax.swing.JLabel();
        pnlCRUDS = new javax.swing.JPanel();
        pnlBotones = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        pnlCampos = new javax.swing.JPanel();
        txtDireccionVeterinario = new javax.swing.JTextField();
        txtCelularVeterinario = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblCedula = new javax.swing.JLabel();
        lblCelular = new javax.swing.JLabel();
        txtNombreVeterinario = new javax.swing.JTextField();
        txtCedulaVeterinario = new javax.swing.JTextField();
        lblVeterinarios = new javax.swing.JLabel();
        cmbVeterinarios = new javax.swing.JComboBox<>();

        pnlLogo.setBackground(new java.awt.Color(255, 255, 255));
        pnlLogo.setForeground(new java.awt.Color(204, 204, 204));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LOGOPL.png"))); // NOI18N

        javax.swing.GroupLayout pnlLogoLayout = new javax.swing.GroupLayout(pnlLogo);
        pnlLogo.setLayout(pnlLogoLayout);
        pnlLogoLayout.setHorizontalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogoLayout.createSequentialGroup()
                .addContainerGap(246, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
        );
        pnlLogoLayout.setVerticalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setMaximumSize(new java.awt.Dimension(700, 480));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 480));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 582));

        pnlPrincipal.setBackground(new java.awt.Color(183, 224, 210));
        pnlPrincipal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(78, 108, 152)));
        pnlPrincipal.setPreferredSize(new java.awt.Dimension(700, 480));

        btnSalir.setBackground(new java.awt.Color(183, 224, 210));
        btnSalir.setForeground(new java.awt.Color(78, 108, 152));
        btnSalir.setText("Salir");
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        lblMASCOTAS.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        lblMASCOTAS.setForeground(new java.awt.Color(78, 108, 152));
        lblMASCOTAS.setText("VETERINARIO");

        pnlCRUDS.setBackground(new java.awt.Color(183, 224, 210));
        pnlCRUDS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(78, 108, 152)));

        pnlBotones.setBackground(new java.awt.Color(183, 224, 210));
        pnlBotones.setForeground(new java.awt.Color(183, 224, 210));

        btnGuardar.setBackground(new java.awt.Color(183, 224, 210));
        btnGuardar.setForeground(new java.awt.Color(78, 108, 152));
        btnGuardar.setText("Guardar Nuevo");
        btnGuardar.setToolTipText("LLENAR TODOS LOS CAMPOS");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(183, 224, 210));
        btnModificar.setForeground(new java.awt.Color(78, 108, 152));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(183, 224, 210));
        btnEliminar.setForeground(new java.awt.Color(78, 108, 152));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(183, 224, 210));
        btnBuscar.setForeground(new java.awt.Color(78, 108, 152));
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("ID Necesario");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnRegresar.setBackground(new java.awt.Color(183, 224, 210));
        btnRegresar.setForeground(new java.awt.Color(78, 108, 152));
        btnRegresar.setText("Regresar");
        btnRegresar.setToolTipText("NO CAMBIAR");
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnBuscar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnRegresar))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pnlCampos.setBackground(new java.awt.Color(183, 224, 210));
        pnlCampos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDireccionVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pnlCampos.add(txtDireccionVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 256, -1));

        txtCelularVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pnlCampos.add(txtCelularVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 256, -1));

        lblDireccion.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(78, 108, 152));
        lblDireccion.setText("Direccion:");
        pnlCampos.add(lblDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, -1, -1));

        lblNombre.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(78, 108, 152));
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombre:");
        pnlCampos.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 93, -1));

        lblCedula.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCedula.setForeground(new java.awt.Color(78, 108, 152));
        lblCedula.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCedula.setText("Cedula:");
        pnlCampos.add(lblCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 120, -1));

        lblCelular.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCelular.setForeground(new java.awt.Color(78, 108, 152));
        lblCelular.setText("Celular:");
        pnlCampos.add(lblCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, -1, -1));

        txtNombreVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pnlCampos.add(txtNombreVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 256, -1));

        txtCedulaVeterinario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pnlCampos.add(txtCedulaVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 256, -1));

        lblVeterinarios.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblVeterinarios.setForeground(new java.awt.Color(78, 108, 152));
        lblVeterinarios.setText("Veterinarios:");
        pnlCampos.add(lblVeterinarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, 20));

        pnlCampos.add(cmbVeterinarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 256, -1));

        javax.swing.GroupLayout pnlCRUDSLayout = new javax.swing.GroupLayout(pnlCRUDS);
        pnlCRUDS.setLayout(pnlCRUDSLayout);
        pnlCRUDSLayout.setHorizontalGroup(
            pnlCRUDSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCRUDSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCRUDSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCRUDSLayout.createSequentialGroup()
                        .addComponent(pnlCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        pnlCRUDSLayout.setVerticalGroup(
            pnlCRUDSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCRUDSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(lblMASCOTAS, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(pnlCRUDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMASCOTAS)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCRUDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtCedulaVeterinario
                .getText().isBlank() || txtNombreVeterinario.getText().isBlank() || txtDireccionVeterinario.getText().isBlank() || txtCelularVeterinario.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "No dejar espacios en blanco");
        } else {
            conexion Base = new conexion();
            VeterinarioDb veterinario = new VeterinarioDb(Base);
            veterinario.agregarVeterinario(txtCedulaVeterinario.getText().trim(), txtNombreVeterinario.getText().trim(), txtDireccionVeterinario.getText().trim(), txtCelularVeterinario.getText().trim());
        }
        limpiarCamposVeterinario();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        lblVeterinarios.setVisible(false);
        cmbVeterinarios.setVisible(false);
        btnBuscar.setVisible(false);
        btnGuardar.setVisible(false);
        lblNombre.setVisible(true);
        txtNombreVeterinario.setVisible(true);
        lblCedula.setVisible(true);
        txtCedulaVeterinario.setVisible(true);
        txtCedulaVeterinario.setEditable(false);
        lblDireccion.setVisible(true);
        txtDireccionVeterinario.setVisible(true);
        lblCelular.setVisible(true);
        txtCelularVeterinario.setVisible(true);
        btnModificar.setVisible(true);
        btnEliminar.setVisible(true);
        btnRegresar.setVisible(true);
        
        
        
        // Obtener la cédula del campo de texto y buscar el veterinario
 String itemSeleccionado = (String) cmbVeterinarios.getSelectedItem();
    if (itemSeleccionado != null && !itemSeleccionado.equals("No hay veterinarios registrados")) {
        String cedula = itemSeleccionado.split(" ")[0];
        conexion base = new conexion();
        VeterinarioDb veteDb = new VeterinarioDb(new conexion());
        veteDb.obtenerVeterinarioPorCedula(cedula,txtCedulaVeterinario, txtNombreVeterinario, txtDireccionVeterinario, txtCelularVeterinario);
    } else {
        JOptionPane.showMessageDialog(null, "Seleccione un veterinario válido.");
    }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
         // Obtener los valores actuales de los campos
    String cedula = txtCedulaVeterinario.getText();
    String nombre = txtNombreVeterinario.getText();
    String direccion = txtDireccionVeterinario.getText();
    String celular = txtCelularVeterinario.getText();

    // Validar que los campos no estén vacíos
    if (cedula.isEmpty() || nombre.isEmpty() || direccion.isEmpty() || celular.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos.");
        return;
    }

    // Instanciar VeterinarioDb y actualizar los datos
    VeterinarioDb veteDb = new VeterinarioDb(new conexion());
    veteDb.modificarVeterinario(cedula, nombre, direccion, celular);

    // Opcional: Deshabilitar campos nuevamente después de modificar
    txtCedulaVeterinario.setEditable(false);
    limpiarCamposVeterinario();
    
    lblVeterinarios.setVisible(true);
            cmbVeterinarios.setVisible(true);
            btnBuscar.setVisible(true);
            btnGuardar.setVisible(false);
            lblNombre.setVisible(false);
            txtNombreVeterinario.setVisible(false);
            lblCedula.setVisible(false);
            txtCedulaVeterinario.setVisible(false);
            lblDireccion.setVisible(false);
            txtDireccionVeterinario.setVisible(false);
            lblCelular.setVisible(false);
            txtCelularVeterinario.setVisible(false);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            btnRegresar.setVisible(false);

            // Llenar los ComboBox con datos
            conexion Base = new conexion();
            VeterinarioDb masDb = new VeterinarioDb(Base);
            masDb.llenarComboBoxVeterinarios(cmbVeterinarios);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
         // Confirmar la eliminación
    int confirmacion = JOptionPane.showConfirmDialog(
        null,
        "¿Estás seguro de que deseas eliminar este veterinario?",
        "Confirmar eliminación",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE
    );

    if (confirmacion == JOptionPane.YES_OPTION) {
        // Obtener la cédula del veterinario seleccionado
        String cedulaVeterinario = txtCedulaVeterinario.getText();

        // Crear conexión y eliminar el veterinario
        conexion Base = new conexion();
        VeterinarioDb vetDb = new VeterinarioDb(Base);

        boolean resultado = vetDb.eliminarVeterinarioPorCedula(cedulaVeterinario);

        if (resultado) {
            JOptionPane.showMessageDialog(null, "El veterinario ha sido eliminado exitosamente.");
            // Limpiar los campos o actualizar la vista según sea necesario
            limpiarCamposVeterinario();
            lblVeterinarios.setVisible(true);
            cmbVeterinarios.setVisible(true);
            btnBuscar.setVisible(true);
            btnGuardar.setVisible(false);
            lblNombre.setVisible(false);
            txtNombreVeterinario.setVisible(false);
            lblCedula.setVisible(false);
            txtCedulaVeterinario.setVisible(false);
            lblDireccion.setVisible(false);
            txtDireccionVeterinario.setVisible(false);
            lblCelular.setVisible(false);
            txtCelularVeterinario.setVisible(false);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            btnRegresar.setVisible(false);

            // Llenar los ComboBox con datos
           
            VeterinarioDb masDb = new VeterinarioDb(Base);
            masDb.llenarComboBoxVeterinarios(cmbVeterinarios);
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo eliminar el veterinario. Verifica el registro.");
        }
    }
    
    
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
      pnlPrincipal.setVisible(false);
        Mostrarpanelcrud(pnlLogo);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        lblVeterinarios.setVisible(true);
            cmbVeterinarios.setVisible(true);
            btnBuscar.setVisible(true);
            btnGuardar.setVisible(false);
            lblNombre.setVisible(false);
            txtNombreVeterinario.setVisible(false);
            lblCedula.setVisible(false);
            txtCedulaVeterinario.setVisible(false);
            lblDireccion.setVisible(false);
            txtDireccionVeterinario.setVisible(false);
            lblCelular.setVisible(false);
            txtCelularVeterinario.setVisible(false);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            btnRegresar.setVisible(false);

            // Llenar los ComboBox con datos
            conexion Base = new conexion();
            VeterinarioDb masDb = new VeterinarioDb(Base);
            masDb.llenarComboBoxVeterinarios(cmbVeterinarios);
    }//GEN-LAST:event_btnRegresarActionPerformed
private void limpiarCamposVeterinario() {
    txtCedulaVeterinario.setText("");
    txtNombreVeterinario.setText("");
    txtDireccionVeterinario.setText("");
    txtCelularVeterinario.setText("");
    // Si tienes más campos, agrégales limpieza aquí
}

private void Mostrarpanelcrud(JPanel p) {
        p.setSize(700, 460);
        p.setLocation(0, 0);
        Menu.PanelPrincipal.removeAll();
        Menu.PanelPrincipal.add(p, BorderLayout.CENTER);
        Menu.PanelPrincipal.revalidate();
        Menu.PanelPrincipal.repaint();
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cmbVeterinarios;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblMASCOTAS;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblVeterinarios;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlCRUDS;
    private javax.swing.JPanel pnlCampos;
    public static javax.swing.JPanel pnlLogo;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JTextField txtCedulaVeterinario;
    private javax.swing.JTextField txtCelularVeterinario;
    private javax.swing.JTextField txtDireccionVeterinario;
    private javax.swing.JTextField txtNombreVeterinario;
    // End of variables declaration//GEN-END:variables
}
