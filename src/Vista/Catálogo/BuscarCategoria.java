/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Catálogo;

import Conexion.Conexion_db;
import Models.Categoria;
import Vista.Menu.VistaMenu;
import Vista.Tables.TablaCategoria;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.query.Query;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author 59399
 */
public class BuscarCategoria extends javax.swing.JPanel {

    /**
     * Creates new form BuscarCategoria
     */
     private String BuscarCodigo;
    public BuscarCategoria(String receivedString ) {
         this.BuscarCodigo = receivedString;
        initComponents();
        buscarCategoria();
        txtCodigo.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new rojeru_san.RSMTextFull();
        btnCancelar = new rojeru_san.RSButtonRiple();
        btnModficar = new rojeru_san.RSButtonRiple();
        lblDescripcion = new javax.swing.JLabel();
        txtDescripcion = new rojeru_san.RSMTextFull();
        jLabel5 = new javax.swing.JLabel();
        txtNombres1 = new rojeru_san.RSMTextFull();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Roboto Black", 0, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 53, 79));
        jLabel2.setText("Modificar Categorias De Productos");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 510, 40));

        jLabel4.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 53, 79));
        jLabel4.setText("Codigo Categoria:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 160, 20));

        txtCodigo.setForeground(new java.awt.Color(0, 53, 79));
        txtCodigo.setColorTransparente(true);
        txtCodigo.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtCodigo.setPlaceholder("Escriba el nombre");
        jPanel1.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 200, 40));

        btnCancelar.setBackground(new java.awt.Color(255, 51, 51));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        btnModficar.setText("Modificar");
        btnModficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModficarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModficar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, -1, -1));

        lblDescripcion.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        lblDescripcion.setForeground(new java.awt.Color(0, 53, 79));
        lblDescripcion.setText("Descripción:");
        jPanel1.add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 120, -1));

        txtDescripcion.setForeground(new java.awt.Color(0, 53, 79));
        txtDescripcion.setColorTransparente(true);
        txtDescripcion.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtDescripcion.setPlaceholder("Descripción");
        jPanel1.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 200, 40));

        jLabel5.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 53, 79));
        jLabel5.setText("Nombre:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 100, 20));

        txtNombres1.setForeground(new java.awt.Color(0, 53, 79));
        txtNombres1.setColorTransparente(true);
        txtNombres1.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtNombres1.setPlaceholder("Escriba el nombre");
        jPanel1.add(txtNombres1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 200, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        TablaCategoria tblcat = new TablaCategoria();
        MostrarpaneCruds(tblcat);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModficarActionPerformed
         if (!txtNombres1.getText().trim().isBlank()) {
        if (!txtDescripcion.getText().isBlank()) {
            boolean valido = false; // Creamos una bandera para validar datos
            
            

                // Llamar al método modificarCategoria
                modificarCategoria(
                        txtCodigo.getText().toUpperCase(),
                        txtNombres1.getText(),
                        txtDescripcion.getText()
                );

                // Mostrar mensaje de éxito
                JOptionPane.showMessageDialog(this, "Categoría Modificada");

                // Limpiar campos y actualizar la tabla
                resetCamposCategoria();
                //mostrarTablaCategorias(); // Actualizar la tabla de categorías

            
        } else {
            JOptionPane.showMessageDialog(this, "No deje espacios en blanco en la descripción de la categoría");
        }
    } else {
        JOptionPane.showMessageDialog(this, "No deje espacios en blanco en el nombre de la categoría");
    }
    }//GEN-LAST:event_btnModficarActionPerformed
public static void modificarCategoria(String codigoCat, String nombreCat, String descripcionCat) {
    // Establecer conexión con la base de datos
    ObjectContainer BaseBD = Conexion_db.ConectarBD();

    // Crear el objeto con los datos nuevos
    Categoria categoriaModificada = new Categoria(codigoCat, nombreCat, descripcionCat);

    // Buscar el objeto existente en la base de datos
    Categoria categoriaBusca = new Categoria(codigoCat, null, null);
    ObjectSet<Categoria> resultado = BaseBD.get(categoriaBusca);

    if (resultado.size() > 0) {
        // Actualizar el objeto existente
        Categoria categoriaExistente = resultado.next();

        // Actualizar campos del objeto existente con los nuevos valores
        categoriaExistente.setNombreCat(nombreCat);
        categoriaExistente.setDescripcionCat(descripcionCat);

        // Guardar los cambios en la base de datos
        BaseBD.store(categoriaExistente);

    } else {
        System.out.println("No se encontró ninguna categoría con el código especificado.");
    }

    // Cerrar la base de datos
    BaseBD.close();
}
// Método para verificar si una categoría existe antes de guardar
public static int verificarCategoriaGuardar(String codigoCat) {
    // Establecer conexión con la base de datos
    ObjectContainer BaseBD = Conexion_db.ConectarBD();
    Categoria categoriaBusca = new Categoria(codigoCat, null, null);
    ObjectSet resultado = BaseBD.get(categoriaBusca);
    int coincidencias = resultado.size();
    // Cerrar la base de datos
    BaseBD.close();
    return coincidencias;
}
// Método para verificar si una categoría existe
public static int verificarCategoria(String codigoCat) {
    // Establecer conexión con la base de datos
    ObjectContainer BaseBD = Conexion_db.ConectarBD();
    Categoria categoriaBusca = new Categoria(codigoCat, null, null);
    ObjectSet resultado = BaseBD.get(categoriaBusca);
    int coincidencias = resultado.size();
    // Cerrar la base de datos
    BaseBD.close();
    return coincidencias;
}
// Método para buscar categoría
public final void buscarCategoria() {
    Boolean encontrado = false;
    // Establecer conexión con la base de datos
    ObjectContainer BaseBD = Conexion_db.ConectarBD();
    Query categoriaQuery = BaseBD.query(); // Método para iniciar una consulta
    categoriaQuery.constrain(Categoria.class); // Buscaremos en la clase Categoria
    categoriaQuery.descend("codigoCat").constrain(BuscarCodigo.toUpperCase()); // Verificamos las coincidencias en el atributo especificado
    ObjectSet<Categoria> resultado = categoriaQuery.execute(); // Ejecutamos la consulta y almacenamos en "resultado"

    // Iterar sobre los resultados para obtener los atributos
    for (Categoria cat : resultado) {
        // Seteamos en los campos recibiendo del objeto
        txtCodigo.setText(cat.getCodigoCat());
        txtNombres1.setText(cat.getNombreCat());
        txtDescripcion.setText(cat.getDescripcionCat());
       
        
        encontrado = true;
        JOptionPane.showMessageDialog(this, "CATEGORÍA ENCONTRADA");
    }
    if (!encontrado) {
        JOptionPane.showMessageDialog(this, "No se encontró la Categoría");
    }

    BaseBD.close();
}
private void resetCamposCategoria() {
    txtCodigo.setText("");
    txtNombres1.setText("");
    txtDescripcion.setText("");
}
 private void MostrarpaneCruds(JPanel p) {
        p.setSize(870, 630);
        p.setLocation(0, 0);
        VistaMenu.PanelPrincipal.removeAll();
        VistaMenu.PanelPrincipal.add(p, BorderLayout.CENTER);
        VistaMenu.PanelPrincipal.revalidate();
        VistaMenu.PanelPrincipal.repaint();
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButtonRiple btnCancelar;
    private rojeru_san.RSButtonRiple btnModficar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDescripcion;
    private rojeru_san.RSMTextFull txtCodigo;
    private rojeru_san.RSMTextFull txtDescripcion;
    private rojeru_san.RSMTextFull txtNombres1;
    // End of variables declaration//GEN-END:variables
}
