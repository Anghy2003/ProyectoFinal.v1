
package Vista.Catálogo;

import Conexion.Conexion_db;
import Models.Producto;
import Models.Proveedor;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

public class CRUD_Prodcuto extends javax.swing.JPanel {
static ObjectContainer BaseFinal = Conexion_db.ConectarBD();

    /**
     * Creates new form CRUD_Prodcuto
     */
    public CRUD_Prodcuto() {
        initComponents();
        pnlBotones.setOpaque(false);
        btnModificar.setVisible(false);
        btnEliminar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lblProveedor = new javax.swing.JLabel();
        lblPrecioProducto = new javax.swing.JLabel();
        txtPrecioProducto = new javax.swing.JTextField();
        lblNombreProducto = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        txtCodigoProducto = new javax.swing.JTextField();
        lblCodigooProducto = new javax.swing.JLabel();
        sprCodigoProducto = new javax.swing.JSeparator();
        sprPrecioProducto = new javax.swing.JSeparator();
        sprNombreProducto = new javax.swing.JSeparator();
        pnlBotones = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtExistenciaMaxima = new javax.swing.JTextField();
        lblExistenciaMaxima = new javax.swing.JLabel();
        lblCodigoocategoria = new javax.swing.JLabel();
        sprCodigoCategoria = new javax.swing.JSeparator();
        lblNumeroProductos = new javax.swing.JLabel();
        txtNumeroProductos = new javax.swing.JTextField();
        txtCodigoCategoria = new javax.swing.JTextField();
        sprNumeroProductos = new javax.swing.JSeparator();
        sprExistenciaMaxima = new javax.swing.JSeparator();
        lblExistenciaMinima = new javax.swing.JLabel();
        txtExistenciaMinima = new javax.swing.JTextField();
        sprExistenciaMinima = new javax.swing.JSeparator();
        txtDescripcion = new javax.swing.JTextField();
        sprDescripcion = new javax.swing.JSeparator();
        lblDescripcion = new javax.swing.JLabel();
        lblProveedorID = new javax.swing.JLabel();
        txtProveedorID = new javax.swing.JTextField();
        sprProveedorID = new javax.swing.JSeparator();
        lblFondoCRUD = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblProveedor.setFont(new java.awt.Font("Eras Bold ITC", 3, 48)); // NOI18N
        lblProveedor.setForeground(new java.awt.Color(255, 255, 255));
        lblProveedor.setText("PRODUCTO");

        lblPrecioProducto.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblPrecioProducto.setForeground(new java.awt.Color(255, 255, 255));
        lblPrecioProducto.setText("Precio:");

        txtPrecioProducto.setBackground(new java.awt.Color(0, 21, 27));
        txtPrecioProducto.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtPrecioProducto.setForeground(new java.awt.Color(255, 255, 255));
        txtPrecioProducto.setBorder(null);
        txtPrecioProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioProductoActionPerformed(evt);
            }
        });
        txtPrecioProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioProductoKeyTyped(evt);
            }
        });

        lblNombreProducto.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblNombreProducto.setForeground(new java.awt.Color(255, 255, 255));
        lblNombreProducto.setText("Nombre:");

        txtNombreProducto.setBackground(new java.awt.Color(0, 21, 27));
        txtNombreProducto.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtNombreProducto.setForeground(new java.awt.Color(255, 255, 255));
        txtNombreProducto.setBorder(null);
        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyTyped(evt);
            }
        });

        txtCodigoProducto.setBackground(new java.awt.Color(0, 21, 27));
        txtCodigoProducto.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtCodigoProducto.setForeground(new java.awt.Color(255, 255, 255));
        txtCodigoProducto.setBorder(null);

        lblCodigooProducto.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblCodigooProducto.setForeground(new java.awt.Color(255, 255, 255));
        lblCodigooProducto.setText("Código:");

        sprCodigoProducto.setForeground(new java.awt.Color(255, 255, 255));

        sprPrecioProducto.setForeground(new java.awt.Color(255, 255, 255));

        sprNombreProducto.setForeground(new java.awt.Color(255, 255, 255));

        pnlBotones.setBackground(new java.awt.Color(0, 21, 27));
        pnlBotones.setLayout(new java.awt.GridBagLayout());

        btnEliminar.setBackground(new java.awt.Color(0, 21, 27));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Eliminar Proveedor seleccionado");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        pnlBotones.add(btnEliminar, gridBagConstraints);

        btnModificar.setBackground(new java.awt.Color(0, 21, 27));
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar/Guardar");
        btnModificar.setToolTipText("Para guardar cambios (Si hubiere)");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlBotones.add(btnModificar, gridBagConstraints);

        btnRegistrar.setBackground(new java.awt.Color(0, 21, 27));
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");
        btnRegistrar.setToolTipText("Ingrese todos los campos");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlBotones.add(btnRegistrar, gridBagConstraints);

        btnBuscar.setBackground(new java.awt.Color(0, 21, 27));
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Ingrese el codigo de proveedor");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        pnlBotones.add(btnBuscar, gridBagConstraints);

        btnSalir.setBackground(new java.awt.Color(0, 21, 27));
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtExistenciaMaxima.setBackground(new java.awt.Color(0, 21, 27));
        txtExistenciaMaxima.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtExistenciaMaxima.setForeground(new java.awt.Color(255, 255, 255));
        txtExistenciaMaxima.setBorder(null);
        txtExistenciaMaxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExistenciaMaximaActionPerformed(evt);
            }
        });
        txtExistenciaMaxima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExistenciaMaximaKeyTyped(evt);
            }
        });

        lblExistenciaMaxima.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblExistenciaMaxima.setForeground(new java.awt.Color(255, 255, 255));
        lblExistenciaMaxima.setText("Existencia maxima:");

        lblCodigoocategoria.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblCodigoocategoria.setForeground(new java.awt.Color(255, 255, 255));
        lblCodigoocategoria.setText("Código de categoría:");

        sprCodigoCategoria.setForeground(new java.awt.Color(255, 255, 255));

        lblNumeroProductos.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblNumeroProductos.setForeground(new java.awt.Color(255, 255, 255));
        lblNumeroProductos.setText("Numero de productos:");

        txtNumeroProductos.setBackground(new java.awt.Color(0, 21, 27));
        txtNumeroProductos.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtNumeroProductos.setForeground(new java.awt.Color(255, 255, 255));
        txtNumeroProductos.setBorder(null);
        txtNumeroProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroProductosKeyTyped(evt);
            }
        });

        txtCodigoCategoria.setBackground(new java.awt.Color(0, 21, 27));
        txtCodigoCategoria.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtCodigoCategoria.setForeground(new java.awt.Color(255, 255, 255));
        txtCodigoCategoria.setBorder(null);

        sprNumeroProductos.setForeground(new java.awt.Color(255, 255, 255));

        sprExistenciaMaxima.setForeground(new java.awt.Color(255, 255, 255));
        sprExistenciaMaxima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sprExistenciaMaximaKeyTyped(evt);
            }
        });

        lblExistenciaMinima.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblExistenciaMinima.setForeground(new java.awt.Color(255, 255, 255));
        lblExistenciaMinima.setText("Existencia minima:");

        txtExistenciaMinima.setBackground(new java.awt.Color(0, 21, 27));
        txtExistenciaMinima.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtExistenciaMinima.setForeground(new java.awt.Color(255, 255, 255));
        txtExistenciaMinima.setBorder(null);
        txtExistenciaMinima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExistenciaMinimaKeyTyped(evt);
            }
        });

        sprExistenciaMinima.setForeground(new java.awt.Color(255, 255, 255));

        txtDescripcion.setBackground(new java.awt.Color(0, 21, 27));
        txtDescripcion.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        txtDescripcion.setBorder(null);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });

        sprDescripcion.setForeground(new java.awt.Color(255, 255, 255));

        lblDescripcion.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        lblDescripcion.setText("Descripcion:");

        lblProveedorID.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        lblProveedorID.setForeground(new java.awt.Color(255, 255, 255));
        lblProveedorID.setText("ID proveedor:");

        txtProveedorID.setBackground(new java.awt.Color(0, 21, 27));
        txtProveedorID.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        txtProveedorID.setForeground(new java.awt.Color(255, 255, 255));
        txtProveedorID.setBorder(null);
        txtProveedorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedorIDActionPerformed(evt);
            }
        });

        sprProveedorID.setForeground(new java.awt.Color(255, 255, 255));

        lblFondoCRUD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/CRUD_ORIGINAL.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 70, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblExistenciaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(txtExistenciaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(sprExistenciaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(sprProveedorID, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblCodigooProducto))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblProveedorID))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(txtCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(txtProveedorID, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(510, 510, 510)
                            .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(sprCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblFondoCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(144, 144, 144)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sprPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblCodigoocategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(19, 19, 19)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCodigoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sprCodigoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblNumeroProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sprNumeroProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNumeroProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblExistenciaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtExistenciaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sprExistenciaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(65, 65, 65)
                                    .addComponent(sprDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(415, 415, 415)
                                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(65, 65, 65)
                                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(lblNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(126, 126, 126)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sprNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(0, 70, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(150, 150, 150)
                            .addComponent(sprNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(120, 120, 120)
                            .addComponent(lblExistenciaMaxima))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(210, 210, 210)
                            .addComponent(lblCodigoocategoria))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(160, 160, 160)
                            .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(280, 280, 280)
                            .addComponent(txtExistenciaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(310, 310, 310)
                            .addComponent(sprExistenciaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(370, 370, 370)
                            .addComponent(lblDescripcion))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(430, 430, 430)
                            .addComponent(sprProveedorID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(200, 200, 200)
                            .addComponent(txtCodigoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(270, 270, 270)
                            .addComponent(sprNumeroProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(240, 240, 240)
                            .addComponent(txtNumeroProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(390, 390, 390)
                            .addComponent(sprDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(190, 190, 190)
                            .addComponent(sprPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(230, 230, 230)
                            .addComponent(sprCodigoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(90, 90, 90)
                            .addComponent(lblCodigooProducto))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(410, 410, 410)
                            .addComponent(lblProveedorID))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(390, 390, 390)
                            .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(170, 170, 170)
                            .addComponent(lblPrecioProducto))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(txtCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(360, 360, 360)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(400, 400, 400)
                            .addComponent(txtProveedorID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(lblNumeroProductos))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(320, 320, 320)
                            .addComponent(txtExistenciaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(350, 350, 350)
                            .addComponent(sprExistenciaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(330, 330, 330)
                            .addComponent(lblExistenciaMinima))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(130, 130, 130)
                            .addComponent(lblNombreProducto))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(110, 110, 110)
                            .addComponent(sprCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblFondoCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrecioProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioProductoActionPerformed

    private void txtPrecioProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioProductoKeyTyped
        char x = evt.getKeyChar();
        if (Character.isLetter(x)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese solo números");
        }
    }//GEN-LAST:event_txtPrecioProductoKeyTyped

    private void txtNombreProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyTyped
        char x = evt.getKeyChar();
        if (Character.isDigit(x)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese solo letras");
        }
    }//GEN-LAST:event_txtNombreProductoKeyTyped

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Producto ProdEncontrado = new Producto(txtCodigoProducto.getText(), null, 0.0, null, 0, 0,0, null, null);//generamos un objeto con codigo para buscar
        ObjectSet resultado = BaseFinal.get(ProdEncontrado);//buscamos en la base
        Boolean encontrado = false;//bandera para informar que no se encontro coincidencias
        if (!resultado.isEmpty()) {
            int respuesta = JOptionPane.showConfirmDialog(null, "Esta seguro que desea eliminar el producto " + txtNombreProducto.getText() + "?", "Eliminar Producto", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                // Eliminar la
                for (Object obj : resultado) {
                    BaseFinal.delete(obj);//eliminamos cada objeto encontrado
                }
                JOptionPane.showMessageDialog(null, "Producto eliminado");
                encontrado = true;
            } else {
                // No eliminar la
                JOptionPane.showMessageDialog(null, "Operación cancelada");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Producto no encontrado en la BD");
        }
        //reset campos
        resetCampos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        //buscamos a proveedor de la base
        for (int i = 0; i < listaProductosBase.size(); i++) {
            if (txtCodigoProducto.getText().equals(listaProductosBase.get(i).getCodigo_Producto())) {
                Boolean valido = false;//creamos una bandera para validar datos
                if (valido = txtPrecioProducto.getText().matches("\\d+(\\.\\d+)?")) {
                    if (valido = txtNumeroProductos.getText().matches("\\d+")) {
                        if (valido = txtExistenciaMaxima.getText().matches("\\d+")) {
                            if (valido = txtExistenciaMinima.getText().matches("\\d+")) {
                                String precioTexto = txtPrecioProducto.getText();
                                Double precio = Double.parseDouble(precioTexto);
                                String numeroP = txtNumeroProductos.getText();
                                int numero = Integer.parseInt(numeroP);
                                String exist1 = txtExistenciaMaxima.getText();
                                int existenciaMax = Integer.parseInt(exist1);
                                String exist2 = txtExistenciaMinima.getText();
                                int existenciaMin = Integer.parseInt(exist2);

                                Producto encontrado = new Producto(txtCodigoProducto.getText(), null,0.0, null, 0,0,0,null,null);//generamos una persona con la cedula para buscar
                                ObjectSet resultado = BaseFinal.get(encontrado);//buscamos en la base
                                if (!resultado.isEmpty()) {
                                    resultado.forEach((obj) -> {
                                        BaseFinal.delete(obj);//eliminamos cada objeto encontrado
                                    });
                                } else {
                                    JOptionPane.showMessageDialog(null, "Producto no encontrada en la BD");
                                }
                                //una vez eliminado procede a guardar para  "Modificar"

                                guardarProducto(BaseFinal, null, txtNombreProducto.getText(), precio, txtCodigoCategoria.getText(), numero, existenciaMax, existenciaMin, txtDescripcion.getText(), txtProveedorID.getText());
                            } else {
                                JOptionPane.showMessageDialog(this, "Ingrese un numero entero positivo de  existencia minima de productos ej: 10");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Ingrese un numero entero positivo de  existencia maxima de productos ej: 10");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Ingrese un numero entero positivo de productos ej: 10");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ingrese un precio en decimales ej: 10.25");
                }

            }
        }
        //reset campos
        resetCampos();
        //visualizar botones necesarios
        btnBuscar.setVisible(true);
        btnRegistrar.setVisible(true);
        btnModificar.setVisible(false);
        btnEliminar.setVisible(false);
        txtCodigoProducto.setEnabled(true);

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        //verificamos que no haya el mismo codigo
        Boolean encontrado = false;
        if (listaProductosBase.size() > 0) {
            for (int i = 0; i < listaProductosBase.size(); i++) {
                if (listaProductosBase.get(i).getNombre_Producto().equalsIgnoreCase(txtNombreProducto.getText())) {
                    JOptionPane.showMessageDialog(this, "YA EXISTE  EL PRODUCTO " + listaProductosBase.get(i).getCodigo_Producto());
                    encontrado = true;
                    resetCampos();
                }
            }

        }
        Boolean valido = false;//creamos una bandera para validar datos
        if (valido = txtPrecioProducto.getText().matches("\\d+(\\.\\d+)?")) {
            if (valido = txtNumeroProductos.getText().matches("\\d+")) {
                if (valido = txtExistenciaMaxima.getText().matches("\\d+")) {
                    if (valido = txtExistenciaMinima.getText().matches("\\d+")) {
                        String precioTexto = txtPrecioProducto.getText();
                        Double precio = Double.parseDouble(precioTexto);
                        String numeroP = txtNumeroProductos.getText();
                        int numero = Integer.parseInt(numeroP);
                        String exist1 = txtExistenciaMaxima.getText();
                        int existenciaMax = Integer.parseInt(exist1);
                        String exist2 = txtExistenciaMinima.getText();
                        int existenciaMin = Integer.parseInt(exist2);

                        guardarProducto(BaseFinal, null, txtNombreProducto.getText(), precio, txtCodigoCategoria.getText(), numero, existenciaMax, existenciaMin, txtDescripcion.getText(), txtProveedorID.getText());
                    } else {
                        JOptionPane.showMessageDialog(this, "Ingrese un numero entero positivo de  existencia minima de productos ej: 10");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ingrese un numero entero positivo de  existencia maxima de productos ej: 10");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un numero entero positivo de productos ej: 10");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese un precio en decimales ej: 10.25");
        }
        resetCampos();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // Buscar una Proveedior por codigo
        Producto miProd = buscarProductoPorCodigo(BaseFinal, txtCodigoProducto.getText());
        if (miProd != null) {//si encontramos resultados (no seria nulo)
            //recibimos los valores del objeto encontrado y lo pasamos a los campos
            txtNombreProducto.setText(miProd.getNombre_Producto());
            txtPrecioProducto.setText(miProd.getPrecio_Producto().toString());
            txtCodigoCategoria.setText(miProd.getCodigo_categoria_Producto());
            txtNumeroProductos.setText(String.valueOf(miProd.getNumeroProductos_Producto()));
            txtExistenciaMaxima.setText(String.valueOf(miProd.getExistrenciaMaxima_Producto()));
            txtExistenciaMinima.setText(String.valueOf(miProd.getExistenciaMinima_Producto()));
            txtDescripcion.setText(miProd.getDescripcion_Producto());
            txtProveedorID.setText(miProd.getID_Proveedor_Producto());

            JOptionPane.showMessageDialog(this, "Persona encontrada");
            txtCodigoProducto.setEnabled(false);
            btnRegistrar.setVisible(false);
            btnBuscar.setVisible(false);
            btnEliminar.setVisible(true);
            btnModificar.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "No se encontro al proveedor con codigo "+txtCodigoProducto.getText());

        }
        resetCampos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.setVisible(false);
        cerrar_BD(BaseFinal);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtExistenciaMaximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExistenciaMaximaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExistenciaMaximaActionPerformed

    private void txtExistenciaMaximaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciaMaximaKeyTyped
        char x = evt.getKeyChar();
        if (Character.isLetter(x)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese solo números");
        }
    }//GEN-LAST:event_txtExistenciaMaximaKeyTyped

    private void txtNumeroProductosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroProductosKeyTyped
        char x = evt.getKeyChar();
        if (Character.isLetter(x)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese solo números");
        }
    }//GEN-LAST:event_txtNumeroProductosKeyTyped

    private void sprExistenciaMaximaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sprExistenciaMaximaKeyTyped
        //a
    }//GEN-LAST:event_sprExistenciaMaximaKeyTyped

    private void txtExistenciaMinimaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciaMinimaKeyTyped
        char x = evt.getKeyChar();
        if (Character.isLetter(x)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese solo números");
        }
    }//GEN-LAST:event_txtExistenciaMinimaKeyTyped

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        char x = evt.getKeyChar();
        if (Character.isDigit(x)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese solo letras");
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void txtProveedorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedorIDActionPerformed

    public final void transparente() {
        txtCodigoProducto.setVisible(true);
        txtCodigoProducto.setOpaque(false);
        txtPrecioProducto.setVisible(true);
        txtPrecioProducto.setOpaque(false);
        txtNombreProducto.setVisible(true);
        txtNombreProducto.setOpaque(false);

//        
//        btnBotoncito2.setVisible(true);
//        btnBotoncito2.setOpaque(false);
//        btnBotoncito2.setContentAreaFilled(false);
//        btnBotoncito2.setBorderPainted(false);
    }

    public static List<Producto> getListaProductosBase(ObjectContainer BaseFinal) {//metodo para obtener la lista de la base
        List<Producto> listaProductosBase = new ArrayList<>();
        ObjectSet<Producto> productos = BaseFinal.query(Producto.class);
        for (Producto producto : productos) {
            listaProductosBase.add(producto);
        }
        return listaProductosBase;
    }

    List<Producto> listaProductosBase = getListaProductosBase(BaseFinal);

    public static int verificarProducto(ObjectContainer BaseFinal, String codigo_Producto, String nombre_Producto, Double precio_Producto, String codigo_categoria_Producto, int numeroProductos_Producto, int existrenciaMaxima_Producto, int existenciaMinima_Producto, String descripcion_Producto, String ID_Proveedor_Producto) {
        // Crear un nuevo objeto  para usar como plantilla de búsqueda
        Producto BuscarProd = new Producto(codigo_Producto, null, 0.0, null, 0, 0, 0, null, null);//se ingreesará el valor del codigo y el resto nulo
        // Obtener todos los objetos que coincidan con la plantilla de búsqueda
        ObjectSet resultado = BaseFinal.get(BuscarProd);//se obtendra resultado que coincida con el codigo
        return resultado.size();//devolvera el numero de coincidencias
    }

    public static void guardarProducto(ObjectContainer BaseFinal, String codigo_Producto, String nombre_Producto, Double precio_Producto, String codigo_categoria_Producto, int numeroProductos_Producto, int existrenciaMaxima_Producto, int existenciaMinima_Producto, String descripcion_Producto, String ID_Proveedor_Producto) {

        Producto producto1 = new Producto(codigo_Producto, nombre_Producto, precio_Producto, codigo_categoria_Producto, numeroProductos_Producto, existrenciaMaxima_Producto, existenciaMinima_Producto, descripcion_Producto, ID_Proveedor_Producto);

        if (verificarProducto(BaseFinal, codigo_Producto, null, 0.0, null, 0, 0, 0, null, null) == 0) {//mandamos a verificar con el codigo
            if (true) {
            }
            BaseFinal.set(producto1);
            JOptionPane.showMessageDialog(null, "Producto guardado");
        } else {
            JOptionPane.showMessageDialog(null, "Producto ya existe en la BD");
        }
    }

    public static int verificarProveedor(ObjectContainer BaseFinal, String codigo_proveedor, String tipo_proveedor, String nombre_proveedor) {
        // Crear un nuevo objeto Clientes para usar como plantilla de búsqueda
        Proveedor BuscarProveedor = new Proveedor(codigo_proveedor, null, null);//se ingreesará el valor del codigo y el resto nulo
        // Obtener todos los objetos que coincidan con la plantilla de búsqueda
        ObjectSet resultado = BaseFinal.get(BuscarProveedor);//se obtendra resultado que coincida con el codigo
        return resultado.size();//devolvera el numero de coincidencias
    }

    private void resetCampos() {
        txtCodigoProducto.setText("");
        txtNombreProducto.setText("");
        txtPrecioProducto.setText("");
        txtCodigoCategoria.setText("");
        txtNumeroProductos.setText("");
        txtExistenciaMaxima.setText("");
        txtExistenciaMinima.setText("");
        txtDescripcion.setText("");
        txtProveedorID.setText("");
    }

    public Producto buscarProductoPorCodigo(ObjectContainer base, String codigo) {
        Producto producto = null;
        ObjectSet<Producto> productos = base.query(Producto.class);
        for (Producto p : productos) {
            if (p.getCodigo_Producto().equals(codigo)) {
                producto = p;
                break;
            }
        }
        return producto;
    }

    public static void cerrar_BD(ObjectContainer BaseFinal) {
        BaseFinal.close();
        System.exit(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCodigooProducto;
    private javax.swing.JLabel lblCodigoocategoria;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblExistenciaMaxima;
    private javax.swing.JLabel lblExistenciaMinima;
    private javax.swing.JLabel lblFondoCRUD;
    private javax.swing.JLabel lblNombreProducto;
    private javax.swing.JLabel lblNumeroProductos;
    private javax.swing.JLabel lblPrecioProducto;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JLabel lblProveedorID;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JSeparator sprCodigoCategoria;
    private javax.swing.JSeparator sprCodigoProducto;
    private javax.swing.JSeparator sprDescripcion;
    private javax.swing.JSeparator sprExistenciaMaxima;
    private javax.swing.JSeparator sprExistenciaMinima;
    private javax.swing.JSeparator sprNombreProducto;
    private javax.swing.JSeparator sprNumeroProductos;
    private javax.swing.JSeparator sprPrecioProducto;
    private javax.swing.JSeparator sprProveedorID;
    private javax.swing.JTextField txtCodigoCategoria;
    private javax.swing.JTextField txtCodigoProducto;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtExistenciaMaxima;
    private javax.swing.JTextField txtExistenciaMinima;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtNumeroProductos;
    private javax.swing.JTextField txtPrecioProducto;
    private javax.swing.JTextField txtProveedorID;
    // End of variables declaration//GEN-END:variables
}
