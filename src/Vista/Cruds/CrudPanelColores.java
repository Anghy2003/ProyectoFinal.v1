
package Vista.Cruds;

import Conexion.Conexion_db;
import Vista.Menu.VistaMenu;
import Vista.Tables.TablaVehiculos;
import com.db4o.*;
import java.awt.BorderLayout;
import javax.swing.JPanel;
import Models.*;
import Vista.Tables.TablaColores;
import com.db4o.query.Query;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;

public class CrudPanelColores extends javax.swing.JPanel {

    /**
     * Creates new form CrudPanelVehiculo
     * @param ColorPAnelTabla
     */
    public CrudPanelColores(String ColorPAnelTabla) {
        initComponents();
        txtColor.setText(ColorPAnelTabla);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblPlaca = new javax.swing.JLabel();
        txtColor = new rojeru_san.RSMTextFull();
        btnCancelar = new rojeru_san.RSButtonRiple();
        btnGuardar = new rojeru_san.RSButtonRiple();
        cmbTipoColorRegistrar = new javax.swing.JComboBox<>();
        lblPropietario = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Roboto Black", 0, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 53, 79));
        jLabel2.setText("Registrar Color");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 220, 40));

        lblPlaca.setFont(new java.awt.Font("Roboto Medium", 0, 21)); // NOI18N
        lblPlaca.setForeground(new java.awt.Color(0, 53, 79));
        lblPlaca.setText("Color:");
        jPanel1.add(lblPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, 70, 40));

        txtColor.setForeground(new java.awt.Color(0, 53, 79));
        txtColor.setColorTransparente(true);
        txtColor.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtColor.setPlaceholder("Ejm: Rojo");
        txtColor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColorKeyTyped(evt);
            }
        });
        jPanel1.add(txtColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 290, 40));

        btnCancelar.setBackground(new java.awt.Color(255, 51, 51));
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Regresar a la lista de Vehiculos");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, -1, -1));

        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Verificar y rellenar todos los campos");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, -1, -1));

        cmbTipoColorRegistrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BRILLANTE", "METALIZADO", "MATE", "PERLADO", " " }));
        jPanel1.add(cmbTipoColorRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 290, 40));

        lblPropietario.setFont(new java.awt.Font("Roboto Medium", 0, 21)); // NOI18N
        lblPropietario.setForeground(new java.awt.Color(0, 53, 79));
        lblPropietario.setText("Tipo Color:");
        jPanel1.add(lblPropietario, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 120, 30));

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        System.out.println("salir");
        TablaColores tblCol = new TablaColores();
        ShowpanelCruds(tblCol);
    }//GEN-LAST:event_btnCancelarActionPerformed

    
    
       
    
    public  void resetCampos(){
    txtColor.setText("");
    }
    
    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        
    }//GEN-LAST:event_btnGuardarMouseClicked

    
     
    
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtColor.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "INGRESE EL COLOR");
        } else {
            guardarColor(txtColor.getText().toUpperCase().trim(), (String) cmbTipoColorRegistrar.getSelectedItem().toString().toUpperCase().trim());
            if (!colorGuardado) {
                JOptionPane.showMessageDialog(this, "Color ya registrado en la BD");
                txtColor.setText("");
                TablaColores miColor = new TablaColores();
                ShowpanelCruds(miColor);
            } else {
                JOptionPane.showMessageDialog(this, "Color guardado con exito");
                txtColor.setText("");
                TablaColores miColor = new TablaColores();
                ShowpanelCruds(miColor);
            }
        }
        System.out.println("Numero de colores guardados: "+verificarNumeroColores());
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtColorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColorKeyTyped
        char x= evt.getKeyChar();
        if (Character.isLowerCase(x)) {
            evt.setKeyChar(Character.toUpperCase(x));
        }
        if (Character.isDigit(x)) {
            JOptionPane.showMessageDialog(this, "Ingrese solo letras");
            evt.consume();
        } 
    }//GEN-LAST:event_txtColorKeyTyped

        
    
    private void ShowpanelCruds(JPanel p) {
        p.setSize(870, 630);// Establece el tamaño
        p.setLocation(0, 0);// Coloca el panel en la posición (0, 0) 
        VistaMenu.PanelPrincipal.removeAll();// Elimina todos los componentes del panel principal de VistaMenu
        VistaMenu.PanelPrincipal.add(p, BorderLayout.CENTER);// Añade el panel 'p' al panel principal de VistaMenu, centrado en el diseño de borde
        VistaMenu.PanelPrincipal.revalidate();// Vuelve a validar el panel principal para asegurarse de que se actualicen los cambios
        VistaMenu.PanelPrincipal.repaint();// Repinta el panel principal para reflejar los cambios visualmente
    }
    
    
    public static boolean colorGuardado = false;
    
    //GUARDAR COLOR
    public static void guardarColor(String Nomnbre_color, String tipoColor) {
        if (buscarColores(Nomnbre_color,tipoColor) == 0) {//guardaremos si no existe colores con ese color y tipo
            colorGuardado = false;
            int k = verificarNumeroColores() + 1;
            // ESTABLECER CONEXION CON LA BASE DE DATOS
            ObjectContainer BaseBD = Conexion_db.ConectarBD();
            Color miColor = new Color("COL" + k, Nomnbre_color, tipoColor);
            BaseBD.store(miColor);//guardo
            colorGuardado = true;
            //Cerrar BD 
            BaseBD.close();
        }else{
            System.out.println("Color ya registrado en la BD");
        }
    }
    //verificar Colores
    public static int verificarNumeroColores() {
        // ESTABLECER CONEXION CON LA BASE DE DATOS
        ObjectContainer BaseBD = Conexion_db.ConectarBD();
        Color ColorBusca = new Color();
        ObjectSet resultado = BaseBD.get(ColorBusca);
        int coincidencias= resultado.size();
        //Cerrar BD
        BaseBD.close();
        return coincidencias;
    }
    
    public static int buscarColores(String txtColor, String txtTipoColor) {
        // Abre la base de datos
        ObjectContainer BaseBD= Conexion_db.ConectarBD();
        // Crea una consulta para buscar objetos Color que coincidan con los valores
        Query query = BaseBD.query();
        query.constrain(Color.class);
        query.descend("Nomnbre_color").constrain(txtColor);
        query.descend("tipoColor").constrain(txtTipoColor);
        // Ejecuta la consulta y obtén el resultado
        ObjectSet<Color> resultado = query.execute();
        int coincidencias=resultado.size();
        // Cierra la base de datos
        BaseBD.close();
        // Devuelve el número de coincidencias
        return coincidencias;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButtonRiple btnCancelar;
    private rojeru_san.RSButtonRiple btnGuardar;
    private javax.swing.JComboBox<String> cmbTipoColorRegistrar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JLabel lblPropietario;
    private rojeru_san.RSMTextFull txtColor;
    // End of variables declaration//GEN-END:variables
}
